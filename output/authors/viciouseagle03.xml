<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Universe OpenAstronomy (Posts by ViciousEagle03)</title><link>http://openastronomy.org/Universe_OA/</link><description></description><atom:link href="http://openastronomy.org/Universe_OA/authors/viciouseagle03.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 19 Jun 2024 01:14:14 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Community Bonding and Week 01 Progress</title><link>http://openastronomy.org/Universe_OA/posts/2024/06/20240607_2045_viciouseagle03/</link><dc:creator>ViciousEagle03</dc:creator><description>&lt;p&gt;This post documents the planning of the project, my learnings during the community bonding period, and the tasks I completed in my first week.&lt;/p&gt;
&lt;h3 id="community-bonding-period"&gt;Community Bonding Period&lt;/h3&gt;
&lt;p&gt;After the euphoria of being accepted into GSoC faded, it was time for setting up my workspace and diving back into the codebase after a month. Planning out the project was key, and meeting with my mentors was a big part of that. I was excited for this chat because the mentors had been super helpful and easy to reach during the proposal stage.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;h3 id="setting-the-stage-mentor-meet-up-and-project-planning"&gt;Setting the Stage: Mentor Meet-Up and Project Planning&lt;/h3&gt;
&lt;p&gt;During the meet-up, we discussed about the best approach to kick-start the development process. It was mostly the mentors discussing about the possible roadmap and as they outlined the project roadmap, I listened carefully, taking notes on important discussions. One of the key decision was to set up clear communication channels and workflows to make sure we all stay on the same page and to ensure I do not vary off of the project or get stuck in a deadend.&lt;/p&gt;
&lt;p&gt;Additionally, we agreed to use GitHub projects for project management, making it easier to keep track of tasks and monitor progress. You can check out the GitHub project here: &lt;a href="https://github.com/orgs/sunpy/projects/12/views/1"&gt;&lt;strong&gt;Github Project&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apart from discussing the project proceedings, I was also tasked with setting up a blog website to document my GSoC journey and share updates with the community. I decided to use Hugo to create the blog website and deployed it through GitHub pages. Additionally, I was asked to share the RSS feed of my blog to ensure that project updates are easily accessible to everyone.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://viciouseagle03.github.io/images/tasks.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="week-01-first-coding-week"&gt;Week [01]: First Coding Week&lt;/h2&gt;
&lt;h3 id="a-brief-overview-about-my-project"&gt;A brief overview about my project&lt;/h3&gt;
&lt;p&gt;My projects aims to enable the storage and retrieval of NDCube objects using the ASDF file format. Currently, ndcube lacks native support for saving NDCube objects to files and loading them back, limiting its usability. To address this, the project will implement convertors and schema definitions for NDCube objects and related classes ensuring robust serialization and deserialiazation. The first phase of my project requires the complete imlementation of serialization of an &lt;strong&gt;ndcube.NDCube&lt;/strong&gt; object when &lt;code&gt;.data&lt;/code&gt; is a numpy array and &lt;code&gt;.wcs&lt;/code&gt; is a &lt;strong&gt;gwcs.WCS object&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id="the-prototype"&gt;The Prototype&lt;/h3&gt;
&lt;p&gt;In our meeting, we discussed the initial steps, which centered around laying the groundwork for serialization support for the NDCube object, particularly focusing on establishing basic functionality. This included implementing the convertor class, registering the convertors as ASDF extensions, and ensuring they were readily available via entry points. Getting a good grasp of the whole serialization process took some dedicated reading through the ASDF docs üßê.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Convertor Class: I implemented the convertor class, including the &lt;code&gt;to_yaml_tree&lt;/code&gt; and &lt;code&gt;from_yaml_tree&lt;/code&gt; methods. The former converts NDCube object attributes into a single node object suitable for serialization. Now, here‚Äôs the super cool part the &lt;code&gt;.wcs&lt;/code&gt; attribute of the NDCube object, being a complex object, is accommodated within the node, as the node is permitted to contain nested complex objects.
&lt;em&gt;Viola!&lt;/em&gt; , so I was able to leverage the existing convertor for GWCS objects which made the process somewhat less complicated. The latter method is exactly the opposite, it accepts a single node object from parsed YAML and returns the corresponding NDCube object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Schema and Manifests: The Schema was designed to validate the presence, and the datatype of the validator properties for the NDCube object. The manifest was implemented for acheiving the resource mapping of the schema.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ASDF Integration: In entry_point.py, I‚Äôve implemented get_resource_mapping to retrieve mappings for schema and manifest files, required for ASDF file validation and identifying NDCube objects and the get_extension is implemented to retrieve extensions , here the extension through which the ndcube convertor was registered&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="code-demonstration"&gt;Code Demonstration&lt;/h3&gt;
&lt;h4 id="ndcube-initialised-with-gwcswcs-object-as-its-wcs-attribute"&gt;NDCube initialised with gwcs.WCS object as its ‚Äò.wcs‚Äô attribute&lt;/h4&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;import numpy as np
import asdf
from astropy.time import Time
from ndcube import NDCube
from ndcube.extra_coords import QuantityTableCoordinate, TimeTableCoordinate
import astropy.units as u


energy = np.arange(10) * u.keV
time = Time('2020-01-01 00:00:00') + np.arange(10) * u.s
energy_coord = QuantityTableCoordinate(energy, names='energy', physical_types='em.energy')
time_coord = TimeTableCoordinate(time, names='time', physical_types='time')

# Initialize the GWCS object
wcs = (time_coord &amp;amp; energy_coord).wcs
data = np.random.rand(len(time), len(energy))

# Initialize the NDCube
ndcube = NDCube(data, wcs=wcs)

with asdf.AsdfFile() as af:
af.tree['ndcube'] = ndcube
af.write_to('ndcube.asdf')
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id="serialized-asdf-file"&gt;Serialized ASDF File&lt;/h4&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;#ASDF 1.0.0
#ASDF_STANDARD 1.5.0
%YAML 1.1
%TAG ! tag:stsci.edu:asdf/
--- !core/asdf-1.1.0
asdf_library: !core/software-1.0.0 {author: The ASDF Developers, homepage: 'http://github.com/asdf-format/asdf',
name: asdf, version: 3.0.1}
history:
extensions:
- !core/extension_metadata-1.0.0
extension_class: asdf.extension._manifest.ManifestExtension
extension_uri: asdf://asdf-format.org/core/extensions/core-1.5.0
software: !core/software-1.0.0 {name: asdf, version: 3.0.1}
- !core/extension_metadata-1.0.0
extension_class: asdf.extension._manifest.ManifestExtension
extension_uri: asdf://sunpy.org/extensions/ndcube-0.1.0
software: !core/software-1.0.0 {name: ndcube, version: 2.3.dev224+g04409b5.d20240605}
- !core/extension_metadata-1.0.0
extension_class: asdf_astropy._manifest.CompoundManifestExtension
extension_uri: asdf://astropy.org/core/extensions/core-1.5.0
software: !core/software-1.0.0 {name: asdf-astropy, version: 0.5.0}
- !core/extension_metadata-1.0.0
extension_class: asdf.extension._manifest.ManifestExtension
extension_uri: asdf://asdf-format.org/transform/extensions/transform-1.5.0
software: !core/software-1.0.0 {name: asdf-astropy, version: 0.5.0}
- !core/extension_metadata-1.0.0
extension_class: asdf.extension._manifest.ManifestExtension
extension_uri: asdf://asdf-format.org/astronomy/gwcs/extensions/gwcs-1.2.0
software: !core/software-1.0.0 {name: gwcs, version: 0.20.0}
ndcube: &amp;amp;id001 !&amp;lt;tag:sunpy.org:ndcube/ndcube/NDCube-0.1.0&amp;gt;
data: !core/ndarray-1.0.0
source: 0
datatype: float64
byteorder: little
shape: [10, 10]
extra_coords: !&amp;lt;tag:sunpy.org:ndcube/extra_coords/extra_coords/ExtraCoords-0.1.0&amp;gt;
dropped_tables: []
ndcube: *id001
wcs: !&amp;lt;tag:stsci.edu:gwcs/wcs-1.2.0&amp;gt;
name: ''
pixel_shape: null
steps:
- !&amp;lt;tag:stsci.edu:gwcs/step-1.1.0&amp;gt;
frame: !&amp;lt;tag:stsci.edu:gwcs/frame-1.0.0&amp;gt;
axes_names: ['', '']
axes_order: [0, 1]
axes_type: [PIXEL, PIXEL]
axis_physical_types: ['custom:PIXEL', 'custom:PIXEL']
name: PixelFrame
naxes: 2
unit: [!unit/unit-1.0.0 pixel, !unit/unit-1.0.0 pixel]
transform: !transform/concatenate-1.2.0
forward:
- !transform/tabular-1.2.0
bounds_error: false
fill_value: .nan
inputs: [x]
lookup_table: !unit/quantity-1.1.0
unit: !unit/unit-1.0.0 s
value: !core/ndarray-1.0.0
source: 1
datatype: float64
byteorder: little
shape: [10]
method: linear
outputs: [y]
points:
- !unit/quantity-1.1.0
unit: !unit/unit-1.0.0 pixel
value: !core/ndarray-1.0.0
source: 2
datatype: float64
byteorder: little
shape: [10]
- !transform/tabular-1.2.0
bounds_error: false
fill_value: .nan
inputs: [x]
lookup_table: !unit/quantity-1.1.0
unit: !unit/unit-1.0.0 keV
value: !core/ndarray-1.0.0
source: 3
datatype: float64
byteorder: little
shape: [10]
method: linear
outputs: [y]
points:
- !unit/quantity-1.1.0
unit: !unit/unit-1.0.0 pixel
value: !core/ndarray-1.0.0
source: 4
datatype: float64
byteorder: little
shape: [10]
inputs: [x0, x1]
outputs: [y0, y1]
- !&amp;lt;tag:stsci.edu:gwcs/step-1.1.0&amp;gt;
frame: !&amp;lt;tag:stsci.edu:gwcs/composite_frame-1.0.0&amp;gt;
frames:
- !&amp;lt;tag:stsci.edu:gwcs/temporal_frame-1.0.0&amp;gt;
axes_names: [time]
axes_order: [0]
axis_physical_types: [time]
name: TemporalFrame
reference_frame: !time/time-1.1.0 2020-01-01 00:00:00.000
unit: [!unit/unit-1.0.0 s]
- !&amp;lt;tag:stsci.edu:gwcs/frame-1.0.0&amp;gt;
axes_names: [energy]
axes_order: [1]
axes_type: [CUSTOM]
axis_physical_types: [em.energy]
name: CoordinateFrame
naxes: 1
unit: [!unit/unit-1.0.0 keV]
name: CompositeFrame
transform: null
...
ÔøΩBLK0 [TY*ﬂùÔøΩÔøΩRÔøΩ4p}QÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩ#ÔøΩÔøΩÔøΩ?»©»èÔøΩÔøΩ?ÔøΩÔøΩÔøΩ#ÔøΩÔøΩ?ÔøΩÔøΩ“©ÔøΩÔøΩ?*BÔøΩÔøΩyÔøΩ? ±ÔøΩtvÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩfEpÔøΩXÔøΩ?k1^}ÔøΩÔøΩ?=ÔøΩÔøΩÔøΩAÔøΩ?ÔøΩ]ÔøΩÔøΩÔøΩÔøΩ?
ÔøΩ÷úÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩHÔøΩ?ÔøΩÔøΩ)9ÔøΩ?{juoPWÔøΩ?pÔøΩ:ÔøΩÔøΩÔøΩÔøΩ?0ÔøΩT9ÔøΩÔøΩ?wÔøΩAÔøΩÔøΩ?pW›´  %ÔøΩ?ÔøΩK#)cBÔøΩ?ÔøΩuvÔøΩÔøΩÔøΩÔøΩ?V‚ÄπÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩ^ÔøΩ.ÔøΩ?ÔøΩÔøΩ2ÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩeQÔøΩ?^ﬂÅ}ÔøΩÔøΩÔøΩ?ÔøΩ$6mwpÔøΩ?ÔøΩ&amp;amp;ÔøΩ"ÔøΩÔøΩ?NÔøΩ;ÔøΩ[ÔøΩ?4ÔøΩÿÖJ3ÔøΩ?
ÔøΩÔøΩÔøΩÔøΩ?=&amp;gt;ÔøΩÔøΩ‹®?ÔøΩÔøΩ#%ÔøΩ?J6F=sÔøΩÔøΩ?EÔøΩÔøΩ}.ÔøΩ?¬∞ÔøΩÔøΩÔøΩ
ÔøΩ?ÔøΩÔøΩÔøΩÔøΩQaÔøΩ?;ÔøΩÔøΩ0ÔøΩ?vMÔøΩÔøΩÔøΩ?qÔøΩÔøΩ«ñ'ÔøΩ?ÔøΩ&amp;lt;5ÔøΩÔøΩ?G]ÔøΩXÔøΩ?ÔøΩÔøΩ.ÔøΩÔøΩÔøΩ?ÔøΩÔøΩ…ê?ÔøΩ?jÔøΩÔøΩGÔøΩLÔøΩ?&amp;lt;ÔøΩÔøΩ&amp;amp;ÔøΩÔøΩ?ÔøΩÔøΩq];I?ÔøΩÃ±ÔøΩÔøΩÔøΩ?XÔøΩDtÔøΩvÔøΩ?P“ßÔøΩÔøΩÔøΩ?0ÔøΩ=ÔøΩEÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩ?O&amp;gt;&amp;gt;tGj?D.ÔøΩÔøΩÔøΩ#ÔøΩ?pÔøΩNÔøΩÔøΩÔøΩÔøΩ?,$ÔøΩV)ÔøΩÔøΩ?jÔøΩÔøΩx∆¶ÔøΩ?ÔøΩvÔøΩhÔøΩ?ÔøΩ"ÔøΩ
ÔøΩpÔøΩ?7SÔøΩ0ÔøΩ?ÔøΩÔøΩÔøΩ€¢`ÔøΩ?8YIÔøΩy÷∞?"EÔøΩÔøΩoÔøΩÔøΩ?JÔøΩGÔøΩ8ÔøΩ?ÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩŸÄÔøΩ?tÔøΩÔøΩÔøΩoÔøΩ?sgÔøΩÔøΩÔøΩ?hÔøΩ»úÔøΩÔøΩÔøΩ?ÔøΩ)ÔøΩ=gÔøΩ?e/B/ÔøΩ?ÔøΩ2ÔøΩ;ÔøΩ?ÔøΩ~ÔøΩxTÔøΩÔøΩ?sÔøΩSÔøΩÔøΩÔøΩ?tÔøΩ|1.ÔøΩÔøΩ?ÔøΩnÔøΩÔøΩ ≥?ÔøΩÔøΩ/ÔøΩÿõÔøΩ?jdÔøΩÔøΩÔøΩÔøΩ?ÔøΩoBÔøΩÔøΩÔøΩ?Lz09ÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩgaÔøΩÔøΩ?`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩkWÔøΩÔøΩ?ÔøΩÔøΩÔøΩP7ÔøΩ?ÔøΩ|ÔøΩF@ÔøΩ?OqÔøΩÔøΩÔøΩ?dÔøΩÔøΩÔøΩ$ÔøΩ?&amp;gt;ÔøΩeÔøΩ~ÔøΩ?ÔøΩtÔøΩ(ÔøΩ?ÔøΩ‘íÔøΩÔøΩÔøΩ?&amp;lt;ÔøΩPÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩaÔøΩ?ÔøΩQŒ¢ÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩ?—≤ÔøΩ#[[ÔøΩ?ÔøΩ ÔøΩ^ÔøΩXÔøΩ?jCÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩmJAÔøΩÔøΩ?ÔøΩBLK0PPP?ÔøΩNÔøΩÔøΩ{IÔøΩ?N"F98ÔøΩÔøΩ?`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ? @ÔøΩ     @hÔøΩÔøΩÔøΩÔøΩÔøΩ@ @ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ@xÔøΩÔøΩÔøΩÔøΩÔøΩ@"@ÔøΩBLK0PPPÔøΩÔøΩÔøΩÔøΩÔøΩZ
ÔøΩŒ∑~ÔøΩZHÔøΩ?@@@@@@ @"@ÔøΩBLK0PPPÔøΩÔøΩÔøΩÔøΩÔøΩZ
ÔøΩŒ∑~ÔøΩZHÔøΩ?@@@@@@ @"@ÔøΩBLK0PPPÔøΩÔøΩÔøΩÔøΩÔøΩZ
ÔøΩŒ∑~ÔøΩZHÔøΩ?@@@@@@ @"@#ASDF BLOCK INDEX
%YAML 1.1
---
- 4304
- 5158
- 5292
- 5426
- 5560
...
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="gsoc-week-one-reflections"&gt;GSoC Week One: Reflections&lt;/h3&gt;
&lt;p&gt;My first week with GSoC has been a thrilling ride, full of learning and growth. The support from the community has been incredible. Looking forward to what lies ahead!üöÄ&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Perseverance is not a long race; it is many short races one after the other.&lt;/p&gt;
&lt;/blockquote&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2024/06/20240607_2045_viciouseagle03/</guid><pubDate>Fri, 07 Jun 2024 19:45:27 GMT</pubDate></item><item><title>Getting Selected for Google Summer of Code 2024</title><link>http://openastronomy.org/Universe_OA/posts/2024/06/20240607_1041_viciouseagle03/</link><dc:creator>ViciousEagle03</dc:creator><description>&lt;p&gt;Hello everyone, this marks my first blog post where I pen down my experience and learnings about getting selected for Google Summer of Code.&lt;/p&gt;
&lt;h3 id="what-is-this-series-about"&gt;What is this series about?&lt;/h3&gt;
&lt;p&gt;In this series of blog posts, I mainly plan on walking you through what it was like working for GSoC, what challenges I faced, and how I overcame those.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;&lt;img alt="img" src="https://viciouseagle03.github.io/images/GSoC_OA.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Google Summer of Code is a global, online program focused on bringing new contributors into open source software development. GSoC Contributors work with an open source organization on a 12+ week programming project under the guidance of mentors.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="discovering-gsoc-from-curiosity-to-decision"&gt;Discovering GSoC: From Curiosity to Decision&lt;/h3&gt;
&lt;p&gt;I first came across Google Summer of Code (GSoC) during my early years at IIT Roorkee.&lt;/p&gt;
&lt;p&gt;The idea of working on real-world open source projects with guidance from experienced mentors worldwide piqued my interest.
For me it provided a unique chance to collaborate with an international community of developers, enhancing my skills in coding, problem-solving, and project management. I was amazed by the idea of jumping into a library that so many people were part of really got me excited. Getting to help out and knowing it would make a difference for loads of folks - it resonated with me :) . So, I went on a hunt for an organisation that matched my skills and also kept me engaged enough to persistently work on the project idea throughout the summers ‚òÄÔ∏è.&lt;/p&gt;
&lt;h3 id="proposal-a-daunting-task"&gt;Proposal: A Daunting Task&lt;/h3&gt;
&lt;p&gt;Once I had chosen the organization and tackled some issues, opened a few pull requests, and familiarized myself with the codebase, the next step was to explore the idea list. Based on my interest, I chose NDCube (open-source SunPy affiliated package). I went through the tests and documentation to understand the NDCube package better and chose the &lt;strong&gt;Serialization of NDCube Classes to ASDF&lt;/strong&gt; project. Crafting the proposal was a challenge, I had to keep it concise, sticking to the recommended 5-page limit. With the support of the SunPy mentors, who provided valuable feedback, I was able to refine my proposal to meet the standards expected by GSoC.&lt;/p&gt;
&lt;h3 id="the-ndcube-package"&gt;The NDCube package&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="https://viciouseagle03.github.io/images/ndcube.png"&gt;&lt;/p&gt;
&lt;p&gt;Let us understand what really is the ndcube package, it is a Python package used for managing multi-dimensional data in astronomy. In astronomy, data often comes in arrays with multiple dimensions, such as images or spectroscopic data cubes. Each element of the array represents a measurement taken at a specific point in space and time.
The challenge lies in managing the relationship between the array elements data and their corresponding physical locations in the observed sky. This is where the World Coordinate System (WCS) framework comes in. WCS provides a standardized way to relate array axes to physical coordinates(connects points in the image to their real locations in space).&lt;/p&gt;
&lt;p&gt;Now, imagine you have lots of pictures, each showing a different part of the sky or taken at a different time. It would be great if you could combine all these pictures into one big map, right? That‚Äôs where ndcube comes in. It‚Äôs like a tool that takes all these pictures and their coordinate information and puts them together in a way that makes them easy to work with.&lt;/p&gt;
&lt;p&gt;With ndcube, you can slice these pictures, zoom in on specific regions, or compare different pictures side by side. You can also transform the coordinates, which is like moving your map from one location to another or rotating it to see things from a different angle. And the best part is, ndcube does all this while keeping track of the complex coordinate transformations of data points. As ndcube puts it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The fundamental reason to opt for ndcube is to harness the astronomy-specific World Coordinate System (WCS).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="the-waiting-game-from-submission-to-selection"&gt;The Waiting Game: From Submission to Selection&lt;/h3&gt;
&lt;p&gt;After a month of anticipation, the long-awaited email arrived from the GSoC team: my proposal had been accepted by OpenAstronomy(The umbrella organization) üòÅ.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://viciouseagle03.github.io/images/Acceptance.png"&gt;&lt;/p&gt;
&lt;p&gt;Getting into GSoC is super exciting and it marks the start of an amazing journey. I know it‚Äôs going to take a lot of hard work and dedication, but I‚Äôm really looking forward to the challenges ahead and most importantly, the incredible learning experience that GSoC brings.&lt;/p&gt;
&lt;p&gt;The mentors overseeing my project are &lt;a href="https://github.com/DanRyanIrish"&gt;Daniel Ryan&lt;/a&gt;, &lt;a href="https://github.com/cadair"&gt;Stuart Mumford&lt;/a&gt;, and &lt;a href="https://github.com/braingram"&gt;Brett Graham&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I plan on writing the next post within a week or two, documenting the progress I make in the project.&lt;/p&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2024/06/20240607_1041_viciouseagle03/</guid><pubDate>Fri, 07 Jun 2024 09:41:56 GMT</pubDate></item><item><title>Venturing Forward : Test Post</title><link>http://openastronomy.org/Universe_OA/posts/2024/05/20240516_1347_viciouseagle03/</link><dc:creator>ViciousEagle03</dc:creator><description>&lt;p&gt;Stay posted for future updates :).
&lt;!-- TEASER_END --&gt;&lt;/p&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2024/05/20240516_1347_viciouseagle03/</guid><pubDate>Thu, 16 May 2024 12:47:06 GMT</pubDate></item><item><title>About Me</title><link>http://openastronomy.org/Universe_OA/posts/2024/05/20240516_0000_viciouseagle03/</link><dc:creator>ViciousEagle03</dc:creator><description>&lt;p&gt;I am a second-year undergraduate student at the Indian Institute of Technology, Roorkee, majoring in Mathematics and Computing.
How is the blog made? The blog is created using Hugo, a static site generator, and it‚Äôs styled with the hugo-paper theme.
Contact Information Reach me at piyushsharma04321@gmail.com
&lt;!-- TEASER_END --&gt;&lt;/p&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2024/05/20240516_0000_viciouseagle03/</guid><pubDate>Wed, 15 May 2024 23:00:00 GMT</pubDate></item></channel></rss>